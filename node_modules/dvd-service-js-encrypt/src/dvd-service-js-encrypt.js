import ua from 'dvd-base-js-ua';
import Cookies from 'js-cookie';
import md5 from 'crypto-js/md5.js';
import param from 'dvd-base-js-param';
// import login from 'dvd-service-js-login';
import runtime from 'dvd-base-js-runtime';

function getDvdsid({req} = {}) {
  let dvdsid = req ? req.cookies.dvdsid : Cookies.get('dvdsid');
  return Object.prototype.toString.call(dvdsid) === '[object String]' ? dvdsid : '';
}

/**
 * @module dvd-service-js-encrypt
 * @author swg [源码地址](http://gitlab.rd.vyohui.com/FE-Service/dvd-service-js-encrypt.git)
 */
export default {
  /**
   * ajax数据完整性加密
   * @param obj {Object} 将要被加密的参数
   * @param publicOptions {Object} 公参
   * @returns {string}
   */
  ajax (obj = {}, {req, res} = {}) {
    // 公共参数
    let data = {
      data_version: '0',
      device_token: '',
      format: 'json',
      osv: (function () {
        if (ua.isDvdApp()) {
          if (ua.isAndroid()) {
            return `web_android_${ua.getDvdAppVersion()}_*`;
          } else if (ua.isIos()) {
            return `web_ios_${ua.getDvdAppVersion()}_*`;
          }
        }
        return 'web_h5_*_*';
      })(),
      // ssr时才会使用默认值
      shop_url: runtime.isServer() ? `${req.protocol}://${req.headers.host.split(':')[0]}` : `${location.protocol}//${location.host}`,
      // sess_key: login.getDvdsid(),
      sess_key: getDvdsid(),
      ts: Date.now(),
      wh: '750_1334',
      device_token: ua.getDvdAppDeviceId(),
    };

    if (runtime.isClient()) {
      // 统计参数
      let tjKeys = ['rp', 'rl', 'logDp', 'dp', 'cq', 'cu'];
      let url = /* 如果有VueRouter则用hask提取url */ window.VueRouter ? location.hash : location.href;
      for (let i in tjKeys) {
        let tjKey = tjKeys[i];
        let tjVal = param.get(tjKey, url);
        if (tjVal) {
          data[tjKey] = tjVal;
          // param[tjKey] = tjVal.replace(/[ +]/g, '');
        }
      }
    }

    // 业务参数
    for (let i in obj) {
      data[i] = obj[i];
    }

    // map转map数组，编码
    let signArr = [];
    let dataStrArr = [];
    Object.keys(data).sort().forEach(function (key, i) {
      signArr.push(`${key}=${data[key]}`);
      dataStrArr.push(`${i === 0 ? '' : '&'}${key}=${encodeURIComponent(data[key])}`);
    });

    // md5校验值
    let sign = md5(signArr.join('')).toString().toUpperCase();

    return `${dataStrArr.join('')}&sign=${sign}`;
  },
};
